{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Naveen M\\\\Desktop\\\\jobmail\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { sendemail } from \"./axiosInstance\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  Sheet1: [{\n    SNo: 1,\n    Name: \"Akanksha Puri\",\n    Email: \"akanksha.puri@sourcefuse.com\",\n    Title: \"Associate Director HR\",\n    Company: \"SourceFuse Technologies\"\n  }, {\n    SNo: 2,\n    Name: \"Akanksha Sogani\",\n    Email: \"akanksha.sogani@perennialsys.com\",\n    Title: \"Head HR\",\n    Company: \"Perennial Systems\"\n  }, {\n    SNo: 3,\n    Name: \"Akhil Jogiparthi\",\n    Email: \"akhil@ibhubs.co\",\n    Title: \"Vice President - Talent Accelerator\",\n    Company: \"iB Hubs\"\n  }]\n};\nconst App = () => {\n  _s();\n  const [failedEmails, setFailedEmails] = useState([]);\n  const handleSendEmails = async () => {\n    let failedList = [];\n    for (const record of data.Sheet1) {\n      const payload = {\n        name: record.Name,\n        email: record.Email,\n        subject: `Application for a Suitable Position at ${record.Company}`,\n        message: `\nDear ${record.Name},\n\nI hope this email finds you well. I am writing to express my interest in any suitable openings at ${record.Company}. With my strong background in MERN Stack Development, React.js, and API integration, I am confident that I can contribute effectively to your team.\n\nPlease find my resume and cover letter attached for your review. I would be grateful for the opportunity to discuss how my skills align with the needs of ${record.Company}.\n\nThank you for considering my application. I look forward to hearing from you.\n\nBest regards,  \nNaveen M  \n[LinkedIn Profile] | [Portfolio Website] | [Contact Number]\n        `\n      };\n      try {\n        console.log(`Sending email to ${record.Email}...`);\n        const response = await sendemail(payload);\n        console.log(`Success: ${response.message}`);\n      } catch (error) {\n        console.error(`Failed to send email to ${record.Email}`, error);\n        failedList.push(record); // Store failed emails\n      }\n    }\n    setFailedEmails(failedList);\n    if (failedList.length === 0) {\n      alert(\"All emails sent successfully!\");\n    } else {\n      alert(`Failed to send ${failedList.length} email(s).`);\n    }\n  };\n\n  // ✅ Retry Sending Failed Emails\n  const handleRetry = async () => {\n    let retryFailedList = [];\n    for (const record of failedEmails) {\n      const payload = {\n        name: record.Name,\n        email: record.Email,\n        subject: `Application for a Suitable Position at ${record.Company}`,\n        message: `\nDear ${record.Name},\n\nI hope this email finds you well. I am writing to express my interest in any suitable openings at ${record.Company}. With my strong background in MERN Stack Development, React.js, and API integration, I am confident that I can contribute effectively to your team.\n\nPlease find my resume and cover letter attached for your review. I would be grateful for the opportunity to discuss how my skills align with the needs of ${record.Company}.\n\nThank you for considering my application. I look forward to hearing from you.\n\nBest regards,  \nNaveen M  \n[LinkedIn Profile] | [Portfolio Website] | [Contact Number]\n        `\n      };\n      try {\n        console.log(`Retrying email to ${record.Email}...`);\n        const response = await sendemail(payload);\n        console.log(`Success: ${response.message}`);\n      } catch (error) {\n        console.error(`Failed again for ${record.Email}`, error);\n        retryFailedList.push(record);\n      }\n    }\n    setFailedEmails(retryFailedList);\n    if (retryFailedList.length === 0) {\n      alert(\"All retry emails sent successfully!\");\n    } else {\n      alert(`Failed to send ${retryFailedList.length} email(s) after retry.`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Send Bulk Emails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendEmails,\n      children: \"Send Emails\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), failedEmails.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Failed Emails:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: failedEmails.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [record.Name, \" (\", record.Email, \") - \", record.Company]\n        }, record.Email, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        children: \"Retry Failed Emails\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"v87YHU3wz6OvGKlOPwzDiZkX+zc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["sendemail","useState","jsxDEV","_jsxDEV","data","Sheet1","SNo","Name","Email","Title","Company","App","_s","failedEmails","setFailedEmails","handleSendEmails","failedList","record","payload","name","email","subject","message","console","log","response","error","push","length","alert","handleRetry","retryFailedList","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/Naveen M/Desktop/jobmail/frontend/src/App.js"],"sourcesContent":["import { sendemail } from \"./axiosInstance\";\nimport { useState } from \"react\";\n\nconst data = {\n  Sheet1: [\n    {\n      SNo: 1,\n      Name: \"Akanksha Puri\",\n      Email: \"akanksha.puri@sourcefuse.com\",\n      Title: \"Associate Director HR\",\n      Company: \"SourceFuse Technologies\",\n    },\n    {\n      SNo: 2,\n      Name: \"Akanksha Sogani\",\n      Email: \"akanksha.sogani@perennialsys.com\",\n      Title: \"Head HR\",\n      Company: \"Perennial Systems\",\n    },\n    {\n      SNo: 3,\n      Name: \"Akhil Jogiparthi\",\n      Email: \"akhil@ibhubs.co\",\n      Title: \"Vice President - Talent Accelerator\",\n      Company: \"iB Hubs\",\n    },\n  ],\n};\n\nconst App = () => {\n  const [failedEmails, setFailedEmails] = useState([]);\n\n  const handleSendEmails = async () => {\n    let failedList = [];\n\n    for (const record of data.Sheet1) {\n      const payload = {\n        name: record.Name,\n        email: record.Email,\n        subject: `Application for a Suitable Position at ${record.Company}`,\n        message: `\nDear ${record.Name},\n\nI hope this email finds you well. I am writing to express my interest in any suitable openings at ${record.Company}. With my strong background in MERN Stack Development, React.js, and API integration, I am confident that I can contribute effectively to your team.\n\nPlease find my resume and cover letter attached for your review. I would be grateful for the opportunity to discuss how my skills align with the needs of ${record.Company}.\n\nThank you for considering my application. I look forward to hearing from you.\n\nBest regards,  \nNaveen M  \n[LinkedIn Profile] | [Portfolio Website] | [Contact Number]\n        `,\n      };\n\n      try {\n        console.log(`Sending email to ${record.Email}...`);\n        const response = await sendemail(payload);\n        console.log(`Success: ${response.message}`);\n      } catch (error) {\n        console.error(`Failed to send email to ${record.Email}`, error);\n        failedList.push(record); // Store failed emails\n      }\n    }\n\n    setFailedEmails(failedList);\n\n    if (failedList.length === 0) {\n      alert(\"All emails sent successfully!\");\n    } else {\n      alert(`Failed to send ${failedList.length} email(s).`);\n    }\n  };\n\n  // ✅ Retry Sending Failed Emails\n  const handleRetry = async () => {\n    let retryFailedList = [];\n\n    for (const record of failedEmails) {\n      const payload = {\n        name: record.Name,\n        email: record.Email,\n        subject: `Application for a Suitable Position at ${record.Company}`,\n        message: `\nDear ${record.Name},\n\nI hope this email finds you well. I am writing to express my interest in any suitable openings at ${record.Company}. With my strong background in MERN Stack Development, React.js, and API integration, I am confident that I can contribute effectively to your team.\n\nPlease find my resume and cover letter attached for your review. I would be grateful for the opportunity to discuss how my skills align with the needs of ${record.Company}.\n\nThank you for considering my application. I look forward to hearing from you.\n\nBest regards,  \nNaveen M  \n[LinkedIn Profile] | [Portfolio Website] | [Contact Number]\n        `,\n      };\n\n      try {\n        console.log(`Retrying email to ${record.Email}...`);\n        const response = await sendemail(payload);\n        console.log(`Success: ${response.message}`);\n      } catch (error) {\n        console.error(`Failed again for ${record.Email}`, error);\n        retryFailedList.push(record);\n      }\n    }\n\n    setFailedEmails(retryFailedList);\n\n    if (retryFailedList.length === 0) {\n      alert(\"All retry emails sent successfully!\");\n    } else {\n      alert(`Failed to send ${retryFailedList.length} email(s) after retry.`);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Send Bulk Emails</h1>\n      <button onClick={handleSendEmails}>Send Emails</button>\n\n      {failedEmails.length > 0 && (\n        <div>\n          <h2>Failed Emails:</h2>\n          <ul>\n            {failedEmails.map((record) => (\n              <li key={record.Email}>\n                {record.Name} ({record.Email}) - {record.Company}\n              </li>\n            ))}\n          </ul>\n          <button onClick={handleRetry}>Retry Failed Emails</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}